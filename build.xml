<project name="oshajava" default="build">
	
	<!-- properties -->
	
	<property name="top.package" value="${ant.project.name}" />

	<property name="src.dir"  value="src" />
	<property name="libs.dir" value="libs" />
	
	<property name="asm.version" value="3.2" />
	<property name="asm.lib"     value="${libs.dir}/asm-${asm.version}/lib" />
	<property name="asm.src.dir" value="${libs.dir}/asm-${asm.version}/src" />
	
	<property name="acme.src.dir" value="${libs.dir}/acmeutils/src" />
	
	<property name="build.dir"    value="build" />
	<property name="classes.dir"  value="${build.dir}/classes" />
	<property name="bin.dir"      value="${build.dir}/bin" />
	<property name="runtime.bin"  value="${bin.dir}/oshajava" />
	<property name="compiler.bin" value="${bin.dir}/oshajavac" />
	<property name="paths.script" value="setup.sh" />
	<property name="module.compressor.bin" value="${bin.dir}/oshamodcompress" />
	<property name="module.rm.bin" value="${bin.dir}/oshamodrm" />
	
	<property name="agent.jar"      value="${build.dir}/${ant.project.name}.jar" />
	<property name="annotation.jar" value="${agent.jar}" />
	
	<property name="agent.class" value="${top.package}.instrument.InstrumentationAgent" />
	<property name="main.class" value="${top.package}.runtime.OshaJavaMain" />
	<property name="processor.class" value="${top.package}.sourceinfo.SpecProcessor" />
	<property name="class.loader" value="${top.package}.instrument.InstrumentingClassLoader" />
	
	<!-- build targets -->
	
	<target name="build" depends="jar,bin" description="Build ${ant.project.name}." />
		
	<target name="clean" description="Clean build files.">
		<delete dir="${build.dir}" />
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${asm.src.dir}" destdir="${classes.dir}" />
		<javac srcdir="${acme.src.dir}" destdir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}">
			<!-- <classpath refid="libs.classpath" /> -->
		</javac>
	</target>
		
	<target name="jar" depends="compile">
		<!-- agent jar (for instrument and runtime) -->
		<!-- <manifestclasspath property="jar.classpath" jarfile="${agent.jar}">
			<classpath refid="libs.classpath" />
		</manifestclasspath> -->
		<property name="manifest" value="${classes.dir}/Manifest.mf" />
<echo file="${manifest}">Premain-Class: ${agent.class}
Agent-Class: ${agent.class}
</echo>
<!--Class-Path: ${jar.classpath}-->
		<jar destfile="${agent.jar}" index="true" manifest="${manifest}">	
			<fileset dir="${classes.dir}" includes="**/*.class" />
			<!-- <indexjars refid="libs.classpath" /> -->
		</jar>
	</target>

	<target name="bin">
		<mkdir dir="${bin.dir}" />
		<echo file="${paths.script}">export PATH=$$PATH:${basedir}/${bin.dir}
			export OSHAJAVA_ANNOTATION_CLASSPATH=${basedir}/${annotation.jar}
			export OSHAJAVA_CLASSPATH=${basedir}/${agent.jar}
			export OSHAJAVA_PROCESSOR_CLASS=${processor.class}
		</echo>
		<echo file="${compiler.bin}">#!/bin/sh
			version() {
				echo -n "osha"
				javac -version				
			}
			case "$1" in
			-version)
				version
				exit
				;;
			*)
				javac -Xbootclasspath/a:${basedir}/${annotation.jar} -processorpath ${basedir}/${annotation.jar} $$@
				exit
				;;
			esac
		</echo>
		<echo file="${runtime.bin}">#!/bin/sh
			version() {
				echo -n "osha"
				java -version				
			}
			JAVA_ARGS=""
			while test -n "$1"
			do
			    case "$1" in
				-version) 
					version
					exit
					;;
				-jar) 
					shift
					CLASSPATH="$1:$CLASSPATH"
					test -d "META-INF" &amp;&amp; mv META-INF META-INF.oshajava.back
					jar xf $$1 META-INF/MANIFEST.MF
					MAIN=`grep "^Main-Class:" META-INF/MANIFEST | awk '{print $2}'`
					rm -rf META-INF
					test -d "META-INF.oshajava.back" &amp;&amp; mv META-INF.oshajava.back META-INF
					;;
				-cp|-classpath) 
					shift
					CLASSPATH="$CLASSPATH:$1"
					;;
				--) 
					shift
					break
					;;
				*) 
					JAVA_ARGS="$$JAVA_ARGS $1" 
					;;
			    esac
			    shift
			done
			
			export CLASSPATH
			java -javaagent:${basedir}/${agent.jar} -Xbootclasspath/a:${basedir}/${agent.jar} $$JAVA_ARGS ${main.class} $$MAIN $$@
			# 
			# -Xbootclasspath/a:${basedir}/${agent.jar}:${toString:libs.classpath} -Djava.system.class.loader=${class.loader}  
		</echo>
		<echo file="${module.compressor.bin}">#!/usr/bin/env ruby
classpath = ENV['CLASSPATH']
if ARGV.first == "-cp" or ARGV.first == "-classpath"
	classpath = ARGV[1]
end
classpath ||= "."
classpath.split(":").each do |d|
	system "find #{d} -name '*.omb' | xargs java -cp ${basedir}/${agent.jar} oshajava.sourceinfo.ModuleSpecCompressor"
end
		</echo>	
		<echo file="${module.rm.bin}">#!/usr/bin/env ruby
classpath = ENV['CLASSPATH']
if ARGV.first == "-cp" or ARGV.first == "-classpath"
	classpath = ARGV[1]
end
classpath ||= "."
classpath.split(":").each do |d|
	system "find #{d} -name '*.oshamodulebuilder' -delete"
	system "find #{d} -name '*.oshamodule' -delete"
end
		</echo>	
		<chmod perm="a+x" type="file">
			<fileset dir="${bin.dir}" includes="*" />	
		</chmod>
	</target>
	
</project>
